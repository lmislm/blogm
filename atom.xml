<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LMISLMのBlog</title>
  
  <subtitle>不积小流，无以成江海。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lmislm.com/"/>
  <updated>2019-03-22T15:39:30.441Z</updated>
  <id>http://lmislm.com/</id>
  
  <author>
    <name>lmislm</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>day70-理由-冲刺</title>
    <link href="http://lmislm.com/2019/03/22/2019-03-22/"/>
    <id>http://lmislm.com/2019/03/22/2019-03-22/</id>
    <published>2019-03-21T16:00:00.000Z</published>
    <updated>2019-03-22T15:39:30.441Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>这几天最忙的就是项目了。这几天项目冲刺。可能要在4月份之前就要上线了。所以这个文章什么的，这个月看起来水的很。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g1bzo4tcr3j20dw09a3yl.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;这几天最忙的就是项目了。这几天项目冲刺。可能要在4月份之前就要上线了。所以这个文章什么的，这个月看起来水的很。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g1bzo4tcr3j20dw09a3yl.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day69-理由-项目</title>
    <link href="http://lmislm.com/2019/03/21/2019-03-21/"/>
    <id>http://lmislm.com/2019/03/21/2019-03-21/</id>
    <published>2019-03-20T16:00:00.000Z</published>
    <updated>2019-03-21T15:10:27.214Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>啥也不说了！今天回来的真的很晚！早点睡觉吧！</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g1atit7xr3j20dw0af3z2.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;啥也不说了！今天回来的真的很晚！早点睡觉吧！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g1atit7xr3j20dw0af3z2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day68-理由-划水</title>
    <link href="http://lmislm.com/2019/03/20/2019-03-20/"/>
    <id>http://lmislm.com/2019/03/20/2019-03-20/</id>
    <published>2019-03-19T16:00:00.000Z</published>
    <updated>2019-03-20T15:06:13.746Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天是真的忘了提交了啊！又忘了push要写的日记内容。所以只能是这里划一下水。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g19ns5m2n2j20dw099q3h.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天是真的忘了提交了啊！又忘了push要写的日记内容。所以只能是这里划一下水。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g19ns5m2n2j20dw099q3h.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="xx" scheme="http://lmislm.com/categories/xx/"/>
    
    
      <category term="xx" scheme="http://lmislm.com/tags/xx/"/>
    
  </entry>
  
  <entry>
    <title>day67-数组对象去重</title>
    <link href="http://lmislm.com/2019/03/19/2019-03-19/"/>
    <id>http://lmislm.com/2019/03/19/2019-03-19/</id>
    <published>2019-03-18T16:00:00.000Z</published>
    <updated>2019-03-19T15:05:51.969Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前都是总结的数组去重，这次记录一个简单的例子，数组对象怎么利用reduce方法去重。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g18i5k7ycfj20ea09ggmo.jpg" alt=""><br><a id="more"></a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>本节包含去重前的数组和去重数组方法和去重之后的结果。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = [&#123;<span class="attr">label</span>: <span class="string">'all'</span>, <span class="attr">value</span>: <span class="number">0</span>&#125;, &#123;<span class="attr">label</span>: <span class="string">'all'</span>, <span class="attr">value</span>: <span class="number">0</span>&#125;, &#123;<span class="attr">label</span>: <span class="string">'trans'</span>, <span class="attr">value</span>: <span class="number">2</span>&#125;, &#123;<span class="attr">label</span>: <span class="string">'edit'</span>, <span class="attr">value</span>: <span class="number">3</span>&#125;]</span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> res = a.reduce(<span class="function">(<span class="params">item, next</span>) =&gt;</span> &#123;</span><br><span class="line">  obj[next.value] ? <span class="string">''</span> : obj[next.value] = <span class="literal">true</span> &amp;&amp; item.push(next)</span><br><span class="line">  <span class="keyword">return</span> item</span><br><span class="line">&#125;, [])</span><br></pre></td></tr></table></figure></p><p>输出：</p><blockquote><p>[ { label: ‘all’, value: 0 },<br>  { label: ‘trans’, value: 2 },<br>  { label: ‘edit’, value: 3 } ]</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前都是总结的数组去重，这次记录一个简单的例子，数组对象怎么利用reduce方法去重。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g18i5k7ycfj20ea09ggmo.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day66-理由-挺忙</title>
    <link href="http://lmislm.com/2019/03/18/2019-03-18/"/>
    <id>http://lmislm.com/2019/03/18/2019-03-18/</id>
    <published>2019-03-17T16:00:00.000Z</published>
    <updated>2019-03-18T14:25:40.011Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>最近有短短续续的看设计模式，但是进展还是非常的缓慢的。这几天习惯了早点下车，离家有一段距离的时候再下车。感觉这几天心情平静的很啊。end~</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g17ba35idwj20dw099q3q.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;最近有短短续续的看设计模式，但是进展还是非常的缓慢的。这几天习惯了早点下车，离家有一段距离的时候再下车。感觉这几天心情平静的很啊。end~&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g17ba35idwj20dw099q3q.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day65-问题小结</title>
    <link href="http://lmislm.com/2019/03/17/2019-003-17/"/>
    <id>http://lmislm.com/2019/03/17/2019-003-17/</id>
    <published>2019-03-16T16:00:00.000Z</published>
    <updated>2019-03-17T14:17:06.071Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近一段时间在微信群里收藏了一些常见的问题。今天来列一下这些问题。<br>以下问题有可能有点乱，随机收集的。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>网络基础知识 - 腾讯<br>懒函数 - 封装, 解决办法重写函数<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> foo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> t = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">foo = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> t</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> foo()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><a href="http://hcysun.me/vue-design/art/" target="_blank" rel="noopener">Vue技术内幕</a><br><a href="https://ustbhuangyi.github.io/vue-analysis/" target="_blank" rel="noopener">Vue.js 技术揭秘</a><br><a href="http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4=" target="_blank" rel="noopener">可视化理解JS事件循环机制</a><br>观察者模式和发布订阅模式的区别<br>怎么理解模块化 - 头条<br>vdom diff<br>排序、AST?<br>二叉树非递归遍历，我写了一个前序遍历 - ？<br>有没有手动搭建webpack工程<br>mvvm的原理、mvc的缺点、vuex用来做什么有什么替代方案、小程序的坑、移动端适配、模块化组件化各自的优缺点、如何封装网络请求，要注意什么？<br>递归实现数组内元素反转<br>手写懒加载实现<br>说到变量提升，class 声明一个类时，存在变量提升么？（不存在。因为要方便类的继承，先声明子类再声明父类；）<br>问  事件循环为什么设计成微任务宏任务<br>http2的多路复用，怎么实现的、Keep alive、缓存机制、cache control的一些值的区别<br>setState发生了什么、react setState直接要diff整个component？<br>手写json.stringify<br>DP算法题<br>嵌套数组环形遍历<br>数组里1-10 10个元素顺序排序，然后让随机打乱用几次for 怎么实现<br>介绍原生datepicker技术细节<br>element ui 中，在下拉菜单组件中，为什么下拉框里的内容要放在body标签里，而不是直接放在这个组件上？<br>websocket面试加分项<br>vuex和redux有什么区别<br>Webpack的tree shaking<br>String类型如何在不使用Number、parseInt、+、-、*、\/的情况下转换成Number？<br>vue和react区别-&gt;vue2.0 3.0响应区别-&gt;set<br>问题， 寄生组合继承中  将父类的原型赋值给了过渡函数的原型然后用过渡函数的实例再赋值给子类(中间修改了过渡函数的constructor指向到子类)  为什么不直接将父类的原型直接赋值给子类的原型呢？<br>部署cdn - ？<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Event/stopImmediatePropagation" target="_blank" rel="noopener">阻止冒泡</a><br><a href="https://github.com/HXWfromDJTU/blog/blob/master/algorithm/event.js" target="_blank" rel="noopener">使用 ECMAScript（JS）代码实现一个事件类Event，包含下面功能：绑定事件、解绑事件和派发事件。</a><br>书《JavaScript设计模式》-张容铭，《设计模式之禅》-机械工业出版社 - 大宏<br>如何调试node的  有没有远程调试过线上服务？<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近一段时间在微信群里收藏了一些常见的问题。今天来列一下这些问题。&lt;br&gt;以下问题有可能有点乱，随机收集的。&lt;/p&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;网络基础知识 - 腾讯&lt;br&gt;懒函数 - 封装, 解决办法重写函数&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; t = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; foo()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hcysun.me/vue-design/art/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue技术内幕&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://ustbhuangyi.github.io/vue-analysis/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue.js 技术揭秘&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4=&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;可视化理解JS事件循环机制&lt;/a&gt;&lt;br&gt;观察者模式和发布订阅模式的区别&lt;br&gt;怎么理解模块化 - 头条&lt;br&gt;vdom diff&lt;br&gt;排序、AST?&lt;br&gt;二叉树非递归遍历，我写了一个前序遍历 - ？&lt;br&gt;有没有手动搭建webpack工程&lt;br&gt;mvvm的原理、mvc的缺点、vuex用来做什么有什么替代方案、小程序的坑、移动端适配、模块化组件化各自的优缺点、如何封装网络请求，要注意什么？&lt;br&gt;递归实现数组内元素反转&lt;br&gt;手写懒加载实现&lt;br&gt;说到变量提升，class 声明一个类时，存在变量提升么？（不存在。因为要方便类的继承，先声明子类再声明父类；）&lt;br&gt;问  事件循环为什么设计成微任务宏任务&lt;br&gt;http2的多路复用，怎么实现的、Keep alive、缓存机制、cache control的一些值的区别&lt;br&gt;setState发生了什么、react setState直接要diff整个component？&lt;br&gt;手写json.stringify&lt;br&gt;DP算法题&lt;br&gt;嵌套数组环形遍历&lt;br&gt;数组里1-10 10个元素顺序排序，然后让随机打乱用几次for 怎么实现&lt;br&gt;介绍原生datepicker技术细节&lt;br&gt;element ui 中，在下拉菜单组件中，为什么下拉框里的内容要放在body标签里，而不是直接放在这个组件上？&lt;br&gt;websocket面试加分项&lt;br&gt;vuex和redux有什么区别&lt;br&gt;Webpack的tree shaking&lt;br&gt;String类型如何在不使用Number、parseInt、+、-、*、\/的情况下转换成Number？&lt;br&gt;vue和react区别-&amp;gt;vue2.0 3.0响应区别-&amp;gt;set&lt;br&gt;问题， 寄生组合继承中  将父类的原型赋值给了过渡函数的原型然后用过渡函数的实例再赋值给子类(中间修改了过渡函数的constructor指向到子类)  为什么不直接将父类的原型直接赋值给子类的原型呢？&lt;br&gt;部署cdn - ？&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/API/Event/stopImmediatePropagation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阻止冒泡&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/HXWfromDJTU/blog/blob/master/algorithm/event.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;使用 ECMAScript（JS）代码实现一个事件类Event，包含下面功能：绑定事件、解绑事件和派发事件。&lt;/a&gt;&lt;br&gt;书《JavaScript设计模式》-张容铭，《设计模式之禅》-机械工业出版社 - 大宏&lt;br&gt;如何调试node的  有没有远程调试过线上服务？&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day64-模板语法</title>
    <link href="http://lmislm.com/2019/03/16/2019-03-1111/"/>
    <id>http://lmislm.com/2019/03/16/2019-03-1111/</id>
    <published>2019-03-15T16:00:00.000Z</published>
    <updated>2019-03-17T13:39:50.433Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>vuejs项目中有个需求，在notification消息提示中某个部分需要有点击事件。UI用的element。想到用模板的方法来构造。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g150hkjjz3j20dw08qaao.jpg" alt=""><br><a id="more"></a></p><h3 id="element-ui-Notification-onClick-触发方式"><a href="#element-ui-Notification-onClick-触发方式" class="headerlink" title="element-ui Notification onClick 触发方式"></a>element-ui Notification onClick 触发方式</h3><p>组件中有两种触发的方式，但是都没有很好的满足需求。</p><h4 id="点击时触发"><a href="#点击时触发" class="headerlink" title="点击时触发"></a>点击时触发</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">  dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">  duration: <span class="number">0</span>,</span><br><span class="line">  message: <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！&lt;a id="message" style="color: #66b1ff;text-decoration: underline;cursor:pointer;" @click=aclick(event)"&gt;前往查看&lt;/a&gt;`</span>,</span><br><span class="line">  onClick: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="创建时触发"><a href="#创建时触发" class="headerlink" title="创建时触发"></a>创建时触发</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">  dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">  duration: <span class="number">0</span>,</span><br><span class="line">  message: <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！&lt;a id="message" style="color: #66b1ff;text-decoration: underline;cursor:pointer;" @click=aclick(event)"&gt;前往查看&lt;/a&gt;`</span>,</span><br><span class="line">  onClick: (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">  &#125;)()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="渲染函数"><a href="#渲染函数" class="headerlink" title="渲染函数"></a>渲染函数</h3><p>比较灵活的render 函数。非常好用，但是没有模板语法那么简洁。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">message: h(</span><br><span class="line">  <span class="string">'div'</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    style: &#123;<span class="attr">display</span>: <span class="string">'inline-block'</span>&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  [ </span><br><span class="line">    h(<span class="string">'span'</span>, <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！`</span>),</span><br><span class="line">    h(<span class="string">'a'</span>, &#123;</span><br><span class="line">      style: &#123;<span class="attr">color</span>: <span class="string">'#409EFF'</span>, <span class="attr">cursor</span>: <span class="string">'pointer'</span>, <span class="string">'text-decoration'</span>: <span class="string">'underline'</span>&#125;,</span><br><span class="line">      on: &#123;</span><br><span class="line">        click: <span class="keyword">this</span>.clickNotificationMsg</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="string">'前往查看'</span>)</span><br><span class="line">  ]</span><br><span class="line">)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;vuejs项目中有个需求，在notification消息提示中某个部分需要有点击事件。UI用的element。想到用模板的方法来构造。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g150hkjjz3j20dw08qaao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day64-模板语法</title>
    <link href="http://lmislm.com/2019/03/16/2019-03-16/"/>
    <id>http://lmislm.com/2019/03/16/2019-03-16/</id>
    <published>2019-03-15T16:00:00.000Z</published>
    <updated>2019-03-17T13:40:24.804Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>vuejs项目中有个需求，在notification消息提示中某个部分需要有点击事件。UI用的element。想到用模板的方法来构造。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g150hkjjz3j20dw08qaao.jpg" alt=""><br><a id="more"></a></p><h3 id="element-ui-Notification-onClick-触发方式"><a href="#element-ui-Notification-onClick-触发方式" class="headerlink" title="element-ui Notification onClick 触发方式"></a>element-ui Notification onClick 触发方式</h3><p>组件中有两种触发的方式，但是都没有很好的满足需求。</p><h4 id="点击时触发"><a href="#点击时触发" class="headerlink" title="点击时触发"></a>点击时触发</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">  dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">  duration: <span class="number">0</span>,</span><br><span class="line">  message: <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！&lt;a id="message" style="color: #66b1ff;text-decoration: underline;cursor:pointer;" @click=aclick(event)"&gt;前往查看&lt;/a&gt;`</span>,</span><br><span class="line">  onClick: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="创建时触发"><a href="#创建时触发" class="headerlink" title="创建时触发"></a>创建时触发</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">  dangerouslyUseHTMLString: <span class="literal">true</span>,</span><br><span class="line">  duration: <span class="number">0</span>,</span><br><span class="line">  message: <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！&lt;a id="message" style="color: #66b1ff;text-decoration: underline;cursor:pointer;" @click=aclick(event)"&gt;前往查看&lt;/a&gt;`</span>,</span><br><span class="line">  onClick: (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">  &#125;)()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="渲染函数"><a href="#渲染函数" class="headerlink" title="渲染函数"></a>渲染函数</h3><p>比较灵活的render 函数。非常好用，但是没有模板语法那么简洁。<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$notify.warning(&#123;</span><br><span class="line">message: h(</span><br><span class="line">  <span class="string">'div'</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    style: &#123;<span class="attr">display</span>: <span class="string">'inline-block'</span>&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  [ </span><br><span class="line">    h(<span class="string">'span'</span>, <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.createdFailedMember&#125;</span>个成员创建失败！`</span>),</span><br><span class="line">    h(<span class="string">'a'</span>, &#123;</span><br><span class="line">      style: &#123;<span class="attr">color</span>: <span class="string">'#409EFF'</span>, <span class="attr">cursor</span>: <span class="string">'pointer'</span>, <span class="string">'text-decoration'</span>: <span class="string">'underline'</span>&#125;,</span><br><span class="line">      on: &#123;</span><br><span class="line">        click: <span class="keyword">this</span>.clickNotificationMsg</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="string">'前往查看'</span>)</span><br><span class="line">  ]</span><br><span class="line">)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;vuejs项目中有个需求，在notification消息提示中某个部分需要有点击事件。UI用的element。想到用模板的方法来构造。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g150hkjjz3j20dw08qaao.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day63-理由-忘提交</title>
    <link href="http://lmislm.com/2019/03/15/2019-03-15/"/>
    <id>http://lmislm.com/2019/03/15/2019-03-15/</id>
    <published>2019-03-14T16:00:00.000Z</published>
    <updated>2019-03-15T14:29:14.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天又写了一天的代码，还是抠细节，抠细节真的很没效率啊。本来写了一些小例子。忘了提交代码了啊。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g13um2h3m6j20gs09gaaj.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天又写了一天的代码，还是抠细节，抠细节真的很没效率啊。本来写了一些小例子。忘了提交代码了啊。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g13um2h3m6j20gs09gaaj.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day62-理由-感悟</title>
    <link href="http://lmislm.com/2019/03/14/2019-03-14/"/>
    <id>http://lmislm.com/2019/03/14/2019-03-14/</id>
    <published>2019-03-13T16:00:00.000Z</published>
    <updated>2019-03-14T14:18:40.344Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天本来想优化代码的，看了很久的代码，最后还是没有优化，代码还是和原来一样。崩溃啊。实在是不愿意写下一些重复的代码，尤其是面条代码。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g12oocb8g8j20e609gt9l.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天本来想优化代码的，看了很久的代码，最后还是没有优化，代码还是和原来一样。崩溃啊。实在是不愿意写下一些重复的代码，尤其是面条代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g12oocb8g8j20e609gt9l.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day61-理由-忙碌</title>
    <link href="http://lmislm.com/2019/03/13/2019-03-13/"/>
    <id>http://lmislm.com/2019/03/13/2019-03-13/</id>
    <published>2019-03-12T16:00:00.000Z</published>
    <updated>2019-03-13T14:45:30.090Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天把昨天的问题解决了，业务上还有很多细节没有去处理。今天早点睡吧。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g11jub5lzzj20ea09ggmo.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天把昨天的问题解决了，业务上还有很多细节没有去处理。今天早点睡吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g11jub5lzzj20ea09ggmo.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day60-理由-头疼</title>
    <link href="http://lmislm.com/2019/03/12/2019-03-12/"/>
    <id>http://lmislm.com/2019/03/12/2019-03-12/</id>
    <published>2019-03-11T16:00:00.000Z</published>
    <updated>2019-03-12T14:25:58.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天下午居然碰到一个问题卡了一整个下午！关键是我现在都还没有解决。是有关vuejs中computed的getter、settter问题。头疼头疼。明天早上再去解决吧。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g10dnl5cn5j20dw099dfw.jpg" alt=""></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天下午居然碰到一个问题卡了一整个下午！关键是我现在都还没有解决。是有关vuejs中computed的getter、settter问题。头疼头疼。明天早上再去解决吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g10dnl5cn5j20dw099dfw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day59-理由-繁忙</title>
    <link href="http://lmislm.com/2019/03/11/2019-03-11/"/>
    <id>http://lmislm.com/2019/03/11/2019-03-11/</id>
    <published>2019-03-10T16:00:00.000Z</published>
    <updated>2019-03-11T14:51:46.228Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>写了一整天的业务代码啊！！这种情况基本是腾不出时间来，写一些小累积。今天就到这吧。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0z8s0rj9ij211i0p0wg0.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;写了一整天的业务代码啊！！这种情况基本是腾不出时间来，写一些小累积。今天就到这吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0z8s0rj9ij211i0p0wg0.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day58-理由-吃撑</title>
    <link href="http://lmislm.com/2019/03/10/2019-03-10/"/>
    <id>http://lmislm.com/2019/03/10/2019-03-10/</id>
    <published>2019-03-09T16:00:00.000Z</published>
    <updated>2019-03-10T14:54:30.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天真的是看书了！看的设计模式。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0y38l5k1oj20dw09975e.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天真的是看书了！看的设计模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0y38l5k1oj20dw09975e.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day57-理由-懒惰</title>
    <link href="http://lmislm.com/2019/03/09/2019-03-09/"/>
    <id>http://lmislm.com/2019/03/09/2019-03-09/</id>
    <published>2019-03-08T16:00:00.000Z</published>
    <updated>2019-03-09T13:12:42.582Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>最近感觉有点累！还是早点睡觉吧！</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0wuoheyspj20dw099t98.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;最近感觉有点累！还是早点睡觉吧！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0wuoheyspj20dw099t98.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day56-理由-拖延</title>
    <link href="http://lmislm.com/2019/03/08/2019-03-08/"/>
    <id>http://lmislm.com/2019/03/08/2019-03-08/</id>
    <published>2019-03-07T16:00:00.000Z</published>
    <updated>2019-03-08T15:14:51.451Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天身边头号新闻，公司获得了1800万投资啊！嗯，有点兴奋！</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0vskcwqtkj20dw09a758.jpg" alt=""><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天身边头号新闻，公司获得了1800万投资啊！嗯，有点兴奋！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0vskcwqtkj20dw09a758.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day55-uncurrying</title>
    <link href="http://lmislm.com/2019/03/07/2019-03-07/"/>
    <id>http://lmislm.com/2019/03/07/2019-03-07/</id>
    <published>2019-03-06T16:00:00.000Z</published>
    <updated>2019-03-07T15:03:28.143Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>让对象借用原本不属于他的方法，我们可以用call,apply把任意对象当做this传入某个方法。有没有能够把this提取出来，并得到更广的适用性？</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0umna40mhj20dw099wf6.jpg" alt=""><br><a id="more"></a></p><h3 id="uncurrying-实现"><a href="#uncurrying-实现" class="headerlink" title="uncurrying 实现"></a>uncurrying 实现</h3><ul><li><p>实现方式之一</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.uncurrying = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="built_in">Array</span>.prototype.shift.call(<span class="built_in">arguments</span>)</span><br><span class="line">    <span class="keyword">return</span> self.apply(obj, <span class="built_in">arguments</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现方法二</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.uncurrying = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> self = <span class="keyword">this</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Function</span>.prototype.call.apply(self, <span class="built_in">arguments</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="uncurrying应用"><a href="#uncurrying应用" class="headerlink" title="uncurrying应用"></a>uncurrying应用</h3><p>通过uncurrying方式，push 函数的作用和Array.prototype.push.call()一样</p><ul><li><p>方法一的应用</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> push = <span class="built_in">Array</span>.prototype.push.uncurrying()</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="string">'length'</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="string">'0'</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">push(obj, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">console</span>.log(obj)</span><br></pre></td></tr></table></figure></li><li><p>发生了什么？</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Function</span>.prototype.uncurrying = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> self = <span class="keyword">this</span> <span class="comment">// self 此时是Array.prototype.push()</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="built_in">Array</span>.prototype.shift.call(<span class="built_in">arguments</span>)</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * obj是&#123;</span></span><br><span class="line"><span class="comment">     *    'length': 1,</span></span><br><span class="line"><span class="comment">     *    '0': 1</span></span><br><span class="line"><span class="comment">     * &#125;</span></span><br><span class="line"><span class="comment">     * argument 对象的第一个元素被截去，剩下[2]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> self.apply(obj, <span class="built_in">arguments</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p>[1].《JavaScript设计模式与开发实践》- 曾探</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;让对象借用原本不属于他的方法，我们可以用call,apply把任意对象当做this传入某个方法。有没有能够把this提取出来，并得到更广的适用性？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0umna40mhj20dw099wf6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day54-理由-ss挂了</title>
    <link href="http://lmislm.com/2019/03/06/2019-03-06/"/>
    <id>http://lmislm.com/2019/03/06/2019-03-06/</id>
    <published>2019-03-05T16:00:00.000Z</published>
    <updated>2019-03-06T15:41:56.513Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>下午突然不能google了，Ping一下我服务器地址，是可以的，端口被封了！于是开始折腾了。可能是最近两会吧。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0ti4vp7frj20dw099gly.jpg" alt=""></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;下午突然不能google了，Ping一下我服务器地址，是可以的，端口被封了！于是开始折腾了。可能是最近两会吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0ti4vp7frj20dw099gly.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>day53-两数组-集合运算</title>
    <link href="http://lmislm.com/2019/03/05/2019-03-05/"/>
    <id>http://lmislm.com/2019/03/05/2019-03-05/</id>
    <published>2019-03-04T16:00:00.000Z</published>
    <updated>2019-03-05T15:25:49.981Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>选择语言对的时候，源语言和目标语言选项要互斥。由此联想到交集、差集、补集、并集的JS如何实现。本文小结ES5和ES6的一些实现方法。</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0sbwcn19kj20dw07tab1.jpg" alt="Photo by Ant Rozetsky on Unsplash"><br>[Photo by Ant Rozetsky on Unsplash]<br><a id="more"></a></p><h3 id="ES5实现"><a href="#ES5实现" class="headerlink" title="ES5实现"></a>ES5实现</h3><ul><li>数据<br>let arrA = [‘a’, 3, 5, ‘d’, ‘o’]<br>let arrB = [‘b’, 5, ‘o’, ‘x’, ‘g’, ‘b’]<h4 id="filter-indexOf-concat"><a href="#filter-indexOf-concat" class="headerlink" title="filter+indexOf+concat"></a>filter+indexOf+concat</h4></li><li><p>交集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> intersection = arrA.filter(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> arrB.indexOf(v) &gt; <span class="number">-1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(intersection)</span><br><span class="line"><span class="comment">// [ 5, 'o' ]</span></span><br></pre></td></tr></table></figure></li><li><p>差集</p><blockquote><p>arrA与arrB的差集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> r = arrA.filter(<span class="function"><span class="params">v</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> arrB.indexOf(v) &gt; <span class="number">-1</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(r)</span><br><span class="line"><span class="comment">// [ 'a', 3, 'd' ]</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>补集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> complementarySet = arrA</span><br><span class="line">.filter(<span class="function"><span class="params">v</span> =&gt;</span> !(arrB.indexOf(v) &gt; <span class="number">-1</span>))</span><br><span class="line">.concat(arrB.filter(<span class="function"><span class="params">v</span> =&gt;</span> !(arrA.indexOf(v) &gt; <span class="number">-1</span>)))</span><br><span class="line"><span class="built_in">console</span>.log(complementarySet) </span><br><span class="line"><span class="comment">// [ 'a', 3, 'd', 'b', 'x', 'g', 'b' ]</span></span><br></pre></td></tr></table></figure></li><li><p>并集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> unionSet = arrA.concat(arrB.filter(<span class="function"><span class="params">v</span> =&gt;</span> !(arrA.indexOf(v) &gt; <span class="number">-1</span>)))</span><br><span class="line"><span class="built_in">console</span>.log(unionSet)</span><br><span class="line"><span class="comment">// [ 'a', 3, 5, 'd', 'o', 'b', 'x', 'g', 'b' ]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="ES6实现"><a href="#ES6实现" class="headerlink" title="ES6实现"></a>ES6实现</h3><ul><li>数据<br>let arrA = [‘a’, 3, 5, ‘d’, ‘o’]<br>let arrB = [‘b’, 5, ‘o’, ‘x’, ‘g’, ‘b’]<h4 id="filter-Set-has"><a href="#filter-Set-has" class="headerlink" title="filter+Set+has"></a>filter+Set+has</h4></li><li><p>交集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> intersection = arrA.filter(<span class="function"><span class="params">x</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Set</span>(arrB).has(x))</span><br><span class="line"><span class="built_in">console</span>.log(intersection)</span><br><span class="line"><span class="comment">// [ 5, 'o' ]</span></span><br></pre></td></tr></table></figure></li><li><p>差集</p><blockquote><p>arrA与arrB的差集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> diffSet = arrA.filter(<span class="function"><span class="params">x</span> =&gt;</span> !<span class="keyword">new</span> <span class="built_in">Set</span>(arrB).has(x))</span><br><span class="line"><span class="built_in">console</span>.log(diffSet)</span><br><span class="line"><span class="comment">// [ 'a', 3, 'd' ]</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>补集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> complementarySet = [...arrA.filter(<span class="function"><span class="params">x</span> =&gt;</span> !<span class="keyword">new</span> <span class="built_in">Set</span>(arrB).has(x)), ...arrB.filter(<span class="function"><span class="params">x</span> =&gt;</span> !<span class="keyword">new</span> <span class="built_in">Set</span>(arrA).has(x))]</span><br><span class="line"><span class="built_in">console</span>.log(complementarySet)</span><br><span class="line"><span class="comment">// [ 'a', 3, 'd', 'b', 'x', 'g', 'b' ]</span></span><br></pre></td></tr></table></figure></li><li><p>并集</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> unionSet = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>([...arrA, ...arrB]))</span><br><span class="line"><span class="built_in">console</span>.log(unionSet)</span><br><span class="line"><span class="comment">// [ 'a', 3, 5, 'd', 'o', 'b', 'x', 'g' ]</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;选择语言对的时候，源语言和目标语言选项要互斥。由此联想到交集、差集、补集、并集的JS如何实现。本文小结ES5和ES6的一些实现方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0sbwcn19kj20dw07tab1.jpg&quot; alt=&quot;Photo by Ant Rozetsky on Unsplash&quot;&gt;&lt;br&gt;[Photo by Ant Rozetsky on Unsplash]&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://lmislm.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="前端" scheme="http://lmislm.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>day52-理由-太忙</title>
    <link href="http://lmislm.com/2019/03/04/2019-03-04/"/>
    <id>http://lmislm.com/2019/03/04/2019-03-04/</id>
    <published>2019-03-03T16:00:00.000Z</published>
    <updated>2019-03-04T14:33:30.406Z</updated>
    
    <content type="html"><![CDATA[<h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>今天有事，写了一整天的代码！这个就不能怪我忘了选博客内容了！理由是本来想提交代码的，结果忘了push代码，所以今天没有一个正经的博客内容。这是第六个理由！</p><p><img src="https://ws1.sinaimg.cn/large/b15ca614gy1g0r4x4nmnpj20e909gdg0.jpg" alt=""></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p&gt;今天有事，写了一整天的代码！这个就不能怪我忘了选博客内容了！理由是本来想提交代码的，结果忘了push代码，所以今天没有一个正经的博客内容。这是第六个理由！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/b15ca614gy1g0r4x4nmnpj20e909gdg0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://lmislm.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="感悟" scheme="http://lmislm.com/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
</feed>
